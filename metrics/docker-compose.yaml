---
version: "3.7"
services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    container_name: cadvisor1
    privileged: true
    networks:
      - traefik_traffic
    ports:
      - 10002:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    command:
      - "--housekeeping_interval=30s"
      - "--docker_only=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.entrypoints=http"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.crowlight.com`)"
      # - "traefik.http.middlewares.cadvisor-https-redirect.redirectscheme.scheme=https"
      # - "traefik.http.routers.cadvisor.middlewares=cadvisor-https-redirect"
      - "traefik.http.routers.cadvisor-secure.entrypoints=https"
      - "traefik.http.routers.cadvisor-secure.rule=Host(`cadvisor.crowlight.com`)"
      - "traefik.http.routers.cadvisor-secure.tls=true"
      - "traefik.http.routers.cadvisor-secure.service=cadvisor"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      - "traefik.http.services.cadvisor.loadbalancer.server.scheme=http"
      - "traefik.docker.network=traefik_traffic"

  prometheus:
    image: prom/prometheus
    restart: always
    container_name: prometheus
    command:
      - '--storage.tsdb.retention.time=30d'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - traefik_traffic
    ports:
      - 9990:9090
    volumes:
      - ~/configs/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /mnt/gfs1/docker/prometheus/data:/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=http"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.crowlight.com`)"
      # - "traefik.http.middlewares.prometheus-https-redirect.redirectscheme.scheme=https"
      # - "traefik.http.routers.prometheus.middlewares=prometheus-https-redirect"
      - "traefik.http.routers.prometheus-secure.entrypoints=https"
      - "traefik.http.routers.prometheus-secure.rule=Host(`prometheus.crowlight.com`)"
      - "traefik.http.routers.prometheus-secure.tls=true"
      - "traefik.http.routers.prometheus-secure.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.services.prometheus.loadbalancer.server.scheme=http"
      - "traefik.docker.network=traefik_traffic"

  grafana:
    image: grafana/grafana-oss:latest-ubuntu
    restart: always
    container_name: grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel
    networks:
      - traefik_traffic
    ports:
      - 3000:3000
    volumes:
      - /mnt/gfs1/docker/grafana/data:/var/lib/grafana
      #- /mnt/gfs1/docker/grafana/config:/etc/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`grafana.crowlight.com`)"
      # - "traefik.http.middlewares.grafana-https-redirect.redirectscheme.scheme=https"
      # - "traefik.http.routers.grafana.middlewares=grafana-https-redirect"
      - "traefik.http.routers.grafana-secure.entrypoints=https"
      - "traefik.http.routers.grafana-secure.rule=Host(`grafana.crowlight.com`)"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.services.grafana.loadbalancer.server.scheme=http"
      - "traefik.docker.network=traefik_traffic"

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
        #network_mode: host
    ports:
      - 9100:9100
    pid: host
    restart: always
    volumes:
      - '/:/host:ro,rslave'

  unpoller:
    image: golift/unifi-poller:latest
    restart: always
    ports:
      - '9130:9130'
    container_name: unpoller
    env_file:
      - /home/moose/configs/docker/unpoller.env

  pihole-exporter:
    image: ekofr/pihole-exporter:latest
    restart: always
    ports:
      - 9617:9617
    environment:
      - PIHOLE_HOSTNAME=10.1.2.120
      - PIHOLE_PORT=8888
      - PIHOLE_API_TOKEN=bcfa43dcde95550285c310f085c7642b1c654ed5af331f021f1cd4bcca355ee1
      - PORT=9617

networks:
  traefik_traffic:
    external: true
    
